#include "mbed.h"

BufferedSerial pc(USBTX, USBRX, 9600); // パソコンとのシリアル通信
// pwm[0] = 0;         左前タイヤ
// pwm[1] = 0;         左後ろタイヤ
// pwm[2] = 0;         右前タイヤ
// pwm[3] = 0;         右後ろタイヤ
CAN can{PB_12, PB_13, (int)1e6}; // 12と13に送る
int16_t pwm[4] = {0, 0, 0, 0};   // pwm制御
CANMessage msg;

int main()
{
  while (1)
  {
    if (pc.readable())
    {
      char buf;
      pc.read(&buf, sizeof(buf));
      if (buf == 'W' || buf == 'w') // 前進
      {
        pwm[0] = 8000;
        pwm[1] = 8000;
        pwm[2] = 8000;
        pwm[3] = 8000;
        osDelay(50);
      }

      if (buf == 'S' || buf == 's') // 後進
      {
        pwm[0] = -8000;
        pwm[1] = -8000;
        pwm[2] = -8000;
        pwm[3] = -8000;
        osDelay(50);
      }

      if (buf == 'A' || buf == 'a') // 左回転
      {
        pwm[0] = -2000;
        pwm[1] = -2000;
        pwm[2] = 2000;
        pwm[3] = 2000;
        osDelay(50);
      }
      if (buf == 'A' || buf == 'a') // 右回転
      {
        pwm[0] = 2000;
        pwm[1] = 2000;
        pwm[2] = -2000;
        pwm[3] = -2000;
        osDelay(50);
      }
      if (buf == 'Q' || buf == 'q') // 微弱前進
      {
        pwm[0] = 2000;
        pwm[1] = 2000;
        pwm[2] = 2000;
        pwm[3] = 2000;
        osDelay(50);
      }
      if (buf == 'Q' || buf == 'q') // 微弱後進
      {
        pwm[0] = -2000;
        pwm[1] = -2000;
        pwm[2] = -2000;
        pwm[3] = -2000;
        osDelay(50);
      }
      if (buf == 'V' || buf == 'v') // Vだっしゅ！！
      {
        pwm[0] = 12000;
        pwm[1] = 12000;
        pwm[2] = 12000;
        pwm[3] = 12000;
        osDelay(50);
      }

      else
      { // 無操作時は止める
        pwm[0] = 0;
        pwm[1] = 0;
        pwm[2] = 0;
        pwm[3] = 0;
      }
      // 他のキーに対する処理も追加可能

      // キーに対する処理が終わったらCAN通信を行う

      CANMessage msg(5, reinterpret_cast<uint8_t *>(pwm), 8);
      can.write(msg);
    }
  }
}
