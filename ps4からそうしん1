#include <WiFi.h>
#include <WiFiClient.h>
#include <WiFiAP.h>
#include <WiFiUdp.h>
#include <PS4Controller.h>


const char *ssid = "GL-SFT1200-19f";
const char *password = "goodlife";

WiFiUDP udp;




void setup() {
  Serial.begin(115200);
  PS4.begin("70:b8:f6:5c:80:16");
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("つないでるぜ");
  }

  Serial.println("つながったぜ");
}


void loop() {
  if (PS4.isConnected()) {
    if (PS4.Right()) {
      static int count = 0;
      char buffer[255];
      sprintf(buffer, "Right %d", count++);
      udp.beginPacket(IPAddress(192, 168, 8, 106), 1234);  // IP address and port of the receiver ESP32
      udp.print(buffer);
      udp.endPacket();
      Serial.println("Right");
    }
    if (PS4.Left()) {
      static int count = 0;
      char buffer[255];
      sprintf(buffer, "Left %d", count++);
      udp.beginPacket(IPAddress(192, 168, 8, 106), 1234);  // IP address and port of the receiver ESP32
      udp.print(buffer);
      udp.endPacket();
      Serial.println("Left");
    }
    if (PS4.Up()) {
      static int count = 0;
      char buffer[255];
      sprintf(buffer, "Up %d", count++);
      udp.beginPacket(IPAddress(192, 168, 8, 106), 1234);  // IP address and port of the receiver ESP32
      udp.print(buffer);
      udp.endPacket();
      Serial.println("Up");
    }
    if (PS4.Down()) {
      static int count = 0;
      char buffer[255];
      sprintf(buffer, "Down %d", count++);
      udp.beginPacket(IPAddress(192, 168, 8, 106), 1234);  // IP address and port of the receiver ESP32
      udp.print(buffer);
      udp.endPacket();
      Serial.println("Down");
    }

    delay(200);
  }
}
